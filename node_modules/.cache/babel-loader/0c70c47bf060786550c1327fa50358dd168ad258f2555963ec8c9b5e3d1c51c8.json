{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isPlaying: false,\n  currentTrack: null,\n  volume: 0.8,\n  masterVolume: 0.8,\n  tracks: [],\n  effects: {\n    reverb: {\n      enabled: false,\n      wet: 0.3,\n      decay: 2\n    },\n    delay: {\n      enabled: false,\n      wet: 0.2,\n      delayTime: 0.25\n    },\n    distortion: {\n      enabled: false,\n      wet: 0.1,\n      distortion: 0.4\n    },\n    filter: {\n      enabled: false,\n      frequency: 1000,\n      Q: 1\n    }\n  },\n  audioContext: null,\n  analyserNode: null,\n  gainNode: null,\n  sharedTracks: [],\n  collaborativeSession: {\n    isActive: false,\n    participants: [],\n    sessionId: null\n  }\n};\nconst audioSlice = createSlice({\n  name: 'audio',\n  initialState,\n  reducers: {\n    play: state => {\n      state.isPlaying = true;\n    },\n    pause: state => {\n      state.isPlaying = false;\n    },\n    stop: state => {\n      state.isPlaying = false;\n      state.currentTrack = null;\n    },\n    setCurrentTrack: (state, action) => {\n      state.currentTrack = action.payload;\n    },\n    setVolume: (state, action) => {\n      state.volume = Math.max(0, Math.min(1, action.payload));\n    },\n    setMasterVolume: (state, action) => {\n      state.masterVolume = Math.max(0, Math.min(1, action.payload));\n    },\n    addTrack: (state, action) => {\n      state.tracks.push(action.payload);\n    },\n    removeTrack: (state, action) => {\n      state.tracks = state.tracks.filter(track => track.id !== action.payload);\n    },\n    updateTrack: (state, action) => {\n      const index = state.tracks.findIndex(track => track.id === action.payload.id);\n      if (index !== -1) {\n        state.tracks[index] = {\n          ...state.tracks[index],\n          ...action.payload\n        };\n      }\n    },\n    updateEffect: (state, action) => {\n      const {\n        effect,\n        settings\n      } = action.payload;\n      state.effects[effect] = {\n        ...state.effects[effect],\n        ...settings\n      };\n    },\n    toggleEffect: (state, action) => {\n      state.effects[action.payload].enabled = !state.effects[action.payload].enabled;\n    },\n    addSharedTrack: (state, action) => {\n      state.sharedTracks.push(action.payload);\n    },\n    startCollaborativeSession: (state, action) => {\n      state.collaborativeSession = {\n        isActive: true,\n        participants: action.payload.participants || [],\n        sessionId: action.payload.sessionId\n      };\n    },\n    endCollaborativeSession: state => {\n      state.collaborativeSession = {\n        isActive: false,\n        participants: [],\n        sessionId: null\n      };\n    }\n  }\n});\nexport const {\n  play,\n  pause,\n  stop,\n  setCurrentTrack,\n  setVolume,\n  setMasterVolume,\n  addTrack,\n  removeTrack,\n  updateTrack,\n  updateEffect,\n  toggleEffect,\n  addSharedTrack,\n  startCollaborativeSession,\n  endCollaborativeSession\n} = audioSlice.actions;\nexport default audioSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isPlaying","currentTrack","volume","masterVolume","tracks","effects","reverb","enabled","wet","decay","delay","delayTime","distortion","filter","frequency","Q","audioContext","analyserNode","gainNode","sharedTracks","collaborativeSession","isActive","participants","sessionId","audioSlice","name","reducers","play","state","pause","stop","setCurrentTrack","action","payload","setVolume","Math","max","min","setMasterVolume","addTrack","push","removeTrack","track","id","updateTrack","index","findIndex","updateEffect","effect","settings","toggleEffect","addSharedTrack","startCollaborativeSession","endCollaborativeSession","actions","reducer"],"sources":["/Users/xe/Desktop/Fast1/src/store/slices/audioSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isPlaying: false,\n  currentTrack: null,\n  volume: 0.8,\n  masterVolume: 0.8,\n  tracks: [],\n  effects: {\n    reverb: { enabled: false, wet: 0.3, decay: 2 },\n    delay: { enabled: false, wet: 0.2, delayTime: 0.25 },\n    distortion: { enabled: false, wet: 0.1, distortion: 0.4 },\n    filter: { enabled: false, frequency: 1000, Q: 1 },\n  },\n  audioContext: null,\n  analyserNode: null,\n  gainNode: null,\n  sharedTracks: [],\n  collaborativeSession: {\n    isActive: false,\n    participants: [],\n    sessionId: null,\n  },\n};\n\nconst audioSlice = createSlice({\n  name: 'audio',\n  initialState,\n  reducers: {\n    play: (state) => {\n      state.isPlaying = true;\n    },\n    pause: (state) => {\n      state.isPlaying = false;\n    },\n    stop: (state) => {\n      state.isPlaying = false;\n      state.currentTrack = null;\n    },\n    setCurrentTrack: (state, action) => {\n      state.currentTrack = action.payload;\n    },\n    setVolume: (state, action) => {\n      state.volume = Math.max(0, Math.min(1, action.payload));\n    },\n    setMasterVolume: (state, action) => {\n      state.masterVolume = Math.max(0, Math.min(1, action.payload));\n    },\n    addTrack: (state, action) => {\n      state.tracks.push(action.payload);\n    },\n    removeTrack: (state, action) => {\n      state.tracks = state.tracks.filter(track => track.id !== action.payload);\n    },\n    updateTrack: (state, action) => {\n      const index = state.tracks.findIndex(track => track.id === action.payload.id);\n      if (index !== -1) {\n        state.tracks[index] = { ...state.tracks[index], ...action.payload };\n      }\n    },\n    updateEffect: (state, action) => {\n      const { effect, settings } = action.payload;\n      state.effects[effect] = { ...state.effects[effect], ...settings };\n    },\n    toggleEffect: (state, action) => {\n      state.effects[action.payload].enabled = !state.effects[action.payload].enabled;\n    },\n    addSharedTrack: (state, action) => {\n      state.sharedTracks.push(action.payload);\n    },\n    startCollaborativeSession: (state, action) => {\n      state.collaborativeSession = {\n        isActive: true,\n        participants: action.payload.participants || [],\n        sessionId: action.payload.sessionId,\n      };\n    },\n    endCollaborativeSession: (state) => {\n      state.collaborativeSession = {\n        isActive: false,\n        participants: [],\n        sessionId: null,\n      };\n    },\n  },\n});\n\nexport const {\n  play,\n  pause,\n  stop,\n  setCurrentTrack,\n  setVolume,\n  setMasterVolume,\n  addTrack,\n  removeTrack,\n  updateTrack,\n  updateEffect,\n  toggleEffect,\n  addSharedTrack,\n  startCollaborativeSession,\n  endCollaborativeSession,\n} = audioSlice.actions;\n\nexport default audioSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}